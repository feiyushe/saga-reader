{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "PermissionFile",
  "description": "Permission file that can define a default permission, a set of permissions or a list of inlined permissions.",
  "type": "object",
  "properties": {
    "default": {
      "description": "The default permission set for the plugin",
      "anyOf": [
        {
          "$ref": "#/definitions/DefaultPermission"
        },
        {
          "type": "null"
        }
      ]
    },
    "set": {
      "description": "A list of permissions sets defined",
      "type": "array",
      "items": {
        "$ref": "#/definitions/PermissionSet"
      }
    },
    "permission": {
      "description": "A list of inlined permissions",
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/Permission"
      }
    }
  },
  "definitions": {
    "DefaultPermission": {
      "description": "The default permission set of the plugin.\n\nWorks similarly to a permission with the \"default\" identifier.",
      "type": "object",
      "required": [
        "permissions"
      ],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 1.0
        },
        "description": {
          "description": "Human-readable description of what the permission does. Tauri convention is to use `<h4>` headings in markdown content for Tauri documentation generation purposes.",
          "type": [
            "string",
            "null"
          ]
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PermissionSet": {
      "description": "A set of direct permissions grouped together under a new name.",
      "type": "object",
      "required": [
        "description",
        "identifier",
        "permissions"
      ],
      "properties": {
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does.",
          "type": "string"
        },
        "permissions": {
          "description": "All permissions this set contains.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionKind"
          }
        }
      }
    },
    "Permission": {
      "description": "Descriptions of explicit privileges of commands.\n\nIt can enable commands to be accessible in the frontend of the application.\n\nIf the scope is defined it can be used to fine grain control the access of individual or multiple commands.",
      "type": "object",
      "required": [
        "identifier"
      ],
      "properties": {
        "version": {
          "description": "The version of the permission.",
          "type": [
            "integer",
            "null"
          ],
          "format": "uint64",
          "minimum": 1.0
        },
        "identifier": {
          "description": "A unique identifier for the permission.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of what the permission does. Tauri internal convention is to use `<h4>` headings in markdown content for Tauri documentation generation purposes.",
          "type": [
            "string",
            "null"
          ]
        },
        "commands": {
          "description": "Allowed or denied commands when using this permission.",
          "default": {
            "allow": [],
            "deny": []
          },
          "allOf": [
            {
              "$ref": "#/definitions/Commands"
            }
          ]
        },
        "scope": {
          "description": "Allowed or denied scoped when using this permission.",
          "allOf": [
            {
              "$ref": "#/definitions/Scopes"
            }
          ]
        },
        "platforms": {
          "description": "Target platforms this permission applies. By default all platforms are affected by this permission.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Target"
          }
        }
      }
    },
    "Commands": {
      "description": "Allowed and denied commands inside a permission.\n\nIf two commands clash inside of `allow` and `deny`, it should be denied by default.",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Allowed command.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deny": {
          "description": "Denied command, which takes priority.",
          "default": [],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Scopes": {
      "description": "An argument for fine grained behavior control of Tauri commands.\n\nIt can be of any serde serializable type and is used to allow or prevent certain actions inside a Tauri command. The configured scope is passed to the command and will be enforced by the command implementation.\n\n## Example\n\n```json { \"allow\": [{ \"path\": \"$HOME/**\" }], \"deny\": [{ \"path\": \"$HOME/secret.txt\" }] } ```",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Data that defines what is allowed by the scope.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        "deny": {
          "description": "Data that defines what is denied by the scope. This should be prioritized by validation logic.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/Value"
          }
        }
      }
    },
    "Value": {
      "description": "All supported ACL values.",
      "anyOf": [
        {
          "description": "Represents a null JSON value.",
          "type": "null"
        },
        {
          "description": "Represents a [`bool`].",
          "type": "boolean"
        },
        {
          "description": "Represents a valid ACL [`Number`].",
          "allOf": [
            {
              "$ref": "#/definitions/Number"
            }
          ]
        },
        {
          "description": "Represents a [`String`].",
          "type": "string"
        },
        {
          "description": "Represents a list of other [`Value`]s.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Value"
          }
        },
        {
          "description": "Represents a map of [`String`] keys to [`Value`]s.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Value"
          }
        }
      ]
    },
    "Number": {
      "description": "A valid ACL number.",
      "anyOf": [
        {
          "description": "Represents an [`i64`].",
          "type": "integer",
          "format": "int64"
        },
        {
          "description": "Represents a [`f64`].",
          "type": "number",
          "format": "double"
        }
      ]
    },
    "Target": {
      "description": "Platform target.",
      "oneOf": [
        {
          "description": "MacOS.",
          "type": "string",
          "enum": [
            "macOS"
          ]
        },
        {
          "description": "Windows.",
          "type": "string",
          "enum": [
            "windows"
          ]
        },
        {
          "description": "Linux.",
          "type": "string",
          "enum": [
            "linux"
          ]
        },
        {
          "description": "Android.",
          "type": "string",
          "enum": [
            "android"
          ]
        },
        {
          "description": "iOS.",
          "type": "string",
          "enum": [
            "iOS"
          ]
        }
      ]
    },
    "PermissionKind": {
      "type": "string",
      "oneOf": [
        {
          "description": "Enables the add_feed command without any pre-configured scope.",
          "type": "string",
          "const": "allow-add-feed"
        },
        {
          "description": "Denies the add_feed command without any pre-configured scope.",
          "type": "string",
          "const": "deny-add-feed"
        },
        {
          "description": "Enables the add_feeds_package command without any pre-configured scope.",
          "type": "string",
          "const": "allow-add-feeds-package"
        },
        {
          "description": "Denies the add_feeds_package command without any pre-configured scope.",
          "type": "string",
          "const": "deny-add-feeds-package"
        },
        {
          "description": "Enables the change_feed_data command without any pre-configured scope.",
          "type": "string",
          "const": "allow-change-feed-data"
        },
        {
          "description": "Denies the change_feed_data command without any pre-configured scope.",
          "type": "string",
          "const": "deny-change-feed-data"
        },
        {
          "description": "Enables the chat_with_article_assistant command without any pre-configured scope.",
          "type": "string",
          "const": "allow-chat-with-article-assistant"
        },
        {
          "description": "Denies the chat_with_article_assistant command without any pre-configured scope.",
          "type": "string",
          "const": "deny-chat-with-article-assistant"
        },
        {
          "description": "Enables the download_ollama command without any pre-configured scope.",
          "type": "string",
          "const": "allow-download-ollama"
        },
        {
          "description": "Denies the download_ollama command without any pre-configured scope.",
          "type": "string",
          "const": "deny-download-ollama"
        },
        {
          "description": "Enables the get_app_config command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-app-config"
        },
        {
          "description": "Denies the get_app_config command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-app-config"
        },
        {
          "description": "Enables the get_feeds_by_package command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-feeds-by-package"
        },
        {
          "description": "Denies the get_feeds_by_package command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-feeds-by-package"
        },
        {
          "description": "Enables the get_feeds_packages command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-feeds-packages"
        },
        {
          "description": "Denies the get_feeds_packages command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-feeds-packages"
        },
        {
          "description": "Enables the get_ollama_status command without any pre-configured scope.",
          "type": "string",
          "const": "allow-get-ollama-status"
        },
        {
          "description": "Denies the get_ollama_status command without any pre-configured scope.",
          "type": "string",
          "const": "deny-get-ollama-status"
        },
        {
          "description": "Enables the launch_ollama command without any pre-configured scope.",
          "type": "string",
          "const": "allow-launch-ollama"
        },
        {
          "description": "Denies the launch_ollama command without any pre-configured scope.",
          "type": "string",
          "const": "deny-launch-ollama"
        },
        {
          "description": "Enables the mark_as_read command without any pre-configured scope.",
          "type": "string",
          "const": "allow-mark-as-read"
        },
        {
          "description": "Denies the mark_as_read command without any pre-configured scope.",
          "type": "string",
          "const": "deny-mark-as-read"
        },
        {
          "description": "Enables the open_article_external command without any pre-configured scope.",
          "type": "string",
          "const": "allow-open-article-external"
        },
        {
          "description": "Denies the open_article_external command without any pre-configured scope.",
          "type": "string",
          "const": "deny-open-article-external"
        },
        {
          "description": "Enables the query_by_id command without any pre-configured scope.",
          "type": "string",
          "const": "allow-query-by-id"
        },
        {
          "description": "Denies the query_by_id command without any pre-configured scope.",
          "type": "string",
          "const": "deny-query-by-id"
        },
        {
          "description": "Enables the read_feed_contents command without any pre-configured scope.",
          "type": "string",
          "const": "allow-read-feed-contents"
        },
        {
          "description": "Denies the read_feed_contents command without any pre-configured scope.",
          "type": "string",
          "const": "deny-read-feed-contents"
        },
        {
          "description": "Enables the remove_feed command without any pre-configured scope.",
          "type": "string",
          "const": "allow-remove-feed"
        },
        {
          "description": "Denies the remove_feed command without any pre-configured scope.",
          "type": "string",
          "const": "deny-remove-feed"
        },
        {
          "description": "Enables the remove_feeds_package command without any pre-configured scope.",
          "type": "string",
          "const": "allow-remove-feeds-package"
        },
        {
          "description": "Denies the remove_feeds_package command without any pre-configured scope.",
          "type": "string",
          "const": "deny-remove-feeds-package"
        },
        {
          "description": "Enables the rename_feed command without any pre-configured scope.",
          "type": "string",
          "const": "allow-rename-feed"
        },
        {
          "description": "Denies the rename_feed command without any pre-configured scope.",
          "type": "string",
          "const": "deny-rename-feed"
        },
        {
          "description": "Enables the rename_feeds_package command without any pre-configured scope.",
          "type": "string",
          "const": "allow-rename-feeds-package"
        },
        {
          "description": "Denies the rename_feeds_package command without any pre-configured scope.",
          "type": "string",
          "const": "deny-rename-feeds-package"
        },
        {
          "description": "Enables the scrap_text_by_url command without any pre-configured scope.",
          "type": "string",
          "const": "allow-scrap-text-by-url"
        },
        {
          "description": "Denies the scrap_text_by_url command without any pre-configured scope.",
          "type": "string",
          "const": "deny-scrap-text-by-url"
        },
        {
          "description": "Enables the search_contents_by_keyword command without any pre-configured scope.",
          "type": "string",
          "const": "allow-search-contents-by-keyword"
        },
        {
          "description": "Denies the search_contents_by_keyword command without any pre-configured scope.",
          "type": "string",
          "const": "deny-search-contents-by-keyword"
        },
        {
          "description": "Enables the set_app_config command without any pre-configured scope.",
          "type": "string",
          "const": "allow-set-app-config"
        },
        {
          "description": "Denies the set_app_config command without any pre-configured scope.",
          "type": "string",
          "const": "deny-set-app-config"
        },
        {
          "description": "Enables the set_favorite command without any pre-configured scope.",
          "type": "string",
          "const": "allow-set-favorite"
        },
        {
          "description": "Denies the set_favorite command without any pre-configured scope.",
          "type": "string",
          "const": "deny-set-favorite"
        },
        {
          "description": "Enables the update_article_by_source command without any pre-configured scope.",
          "type": "string",
          "const": "allow-update-article-by-source"
        },
        {
          "description": "Denies the update_article_by_source command without any pre-configured scope.",
          "type": "string",
          "const": "deny-update-article-by-source"
        },
        {
          "description": "Enables the update_feed_contents command without any pre-configured scope.",
          "type": "string",
          "const": "allow-update-feed-contents"
        },
        {
          "description": "Denies the update_feed_contents command without any pre-configured scope.",
          "type": "string",
          "const": "deny-update-feed-contents"
        },
        {
          "description": "",
          "type": "string",
          "const": "default"
        }
      ]
    }
  }
}