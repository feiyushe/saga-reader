{
  "data": {
    "code_dossier": {
      "name": "lib.rs",
      "file_path": "crates/ollama/src/lib.rs",
      "code_purpose": "specificfeature",
      "importance_score": 0.8,
      "description": "Ollama程序的本地状态检测、远程健康检查及版本查询功能实现",
      "functions": [
        "install",
        "launch",
        "request_running",
        "request_version",
        "query_platform",
        "query_platform_by_remote",
        "query_platform_by_process",
        "parse_version",
        "parse_is_running_from_version",
        "create_shell_command"
      ],
      "interfaces": [
        "ProgramStatus",
        "Information",
        "APIVersionResponse"
      ]
    },
    "detailed_description": "该组件负责管理与Ollama AI运行时环境的交互，主要功能包括：1) 检测本地Ollama是否安装并运行；2) 查询本地或远程Ollama服务的版本信息；3) 统一入口`query_platform`根据本地进程状态决定使用本地CLI检测还是远程HTTP探测。支持跨平台（Windows/macOS/Linux）路径配置和shell命令构造。通过`reqwest`发起HTTP请求验证服务可用性，并解析CLI输出获取版本号和运行状态。",
    "responsibilities": [
      "检测Ollama在本地系统的安装与运行状态",
      "通过HTTP API探测远程Ollama服务的健康状况和版本",
      "统一整合本地进程检查与远程API查询的结果",
      "跨平台兼容性处理（不同操作系统的执行路径和shell命令）",
      "解析Ollama CLI输出以提取版本信息和连接状态"
    ],
    "interfaces": [
      {
        "name": "ProgramStatus",
        "interface_type": "enum",
        "visibility": "pub",
        "parameters": [],
        "return_type": null,
        "description": "表示Ollama程序的三种状态：未安装、已安装但未运行、正在运行"
      },
      {
        "name": "Information",
        "interface_type": "struct",
        "visibility": "pub",
        "parameters": [],
        "return_type": null,
        "description": "封装Ollama实例的版本、状态和额外错误信息"
      },
      {
        "name": "APIVersionResponse",
        "interface_type": "struct",
        "visibility": "private",
        "parameters": [],
        "return_type": null,
        "description": "用于反序列化远程API返回的版本响应"
      }
    ],
    "dependencies": [
      {
        "name": "serde",
        "path": null,
        "is_external": true,
        "line_number": 1,
        "dependency_type": "serialization",
        "version": null
      },
      {
        "name": "tokio",
        "path": null,
        "is_external": true,
        "line_number": 2,
        "dependency_type": "runtime",
        "version": null
      },
      {
        "name": "types",
        "path": "types::llm_endpoint::LLMEndPoint",
        "is_external": false,
        "line_number": 3,
        "dependency_type": "internal_module",
        "version": null
      }
    ],
    "complexity_metrics": {
      "cyclomatic_complexity": 8.0,
      "lines_of_code": 140,
      "number_of_functions": 10,
      "number_of_classes": 3,
      "depth_of_inheritance": 0,
      "coupling_factor": 0.25,
      "cohesion_score": 0.85
    }
  },
  "timestamp": 1758805650,
  "prompt_hash": "12aa64503c44747dbccc4b8a9b50c925",
  "token_usage": {
    "input_tokens": 1462,
    "output_tokens": 823,
    "total_tokens": 2285
  },
  "model_name": null
}