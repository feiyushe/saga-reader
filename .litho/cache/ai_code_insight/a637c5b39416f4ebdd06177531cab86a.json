{
  "data": {
    "code_dossier": {
      "name": "commands.rs",
      "file_path": "crates/tauri-plugin-feed-api/src/commands.rs",
      "code_purpose": "controller",
      "importance_score": 0.8,
      "description": "Tauri 命令模块，提供与 RSS Feed 管理、文章内容抓取、AI 助手交互等核心功能的前端接口。封装了对 FeaturesAPI 的调用，并处理错误转换。",
      "functions": [
        "add_feeds_package",
        "remove_feeds_package",
        "rename_feeds_package",
        "add_feed",
        "remove_feed",
        "rename_feed",
        "change_feed_data",
        "get_feeds_packages",
        "get_feeds_by_package",
        "update_feed_contents",
        "read_feed_contents",
        "query_by_id",
        "mark_as_read",
        "set_favorite",
        "get_app_config",
        "set_app_config",
        "get_ollama_status",
        "download_ollama",
        "launch_ollama",
        "open_article_external",
        "scrap_text_by_url",
        "update_article_by_source",
        "chat_with_article_assistant",
        "search_contents_by_keyword"
      ],
      "interfaces": []
    },
    "detailed_description": "该组件是 Tauri 框架下的后端命令控制器，负责暴露一系列异步命令供前端调用。其主要功能围绕 FeedsPackage（订阅包）和 Feed（订阅源）的增删改查（CRUD），以及文章内容的读取、标记已读、收藏、搜索等操作。同时，它集成了 AI 能力，支持通过 Ollama 启动本地大模型服务，并实现基于文章内容的智能问答（chat_with_article_assistant）。此外，组件还包含一个网页内容抓取机制（scrap_text_by_url），通过创建隐藏的 WebView 窗口加载目标 URL 并提取 HTML 内容，为后续的 AI 处理提供数据源。所有命令都通过 `convert_result` 函数将 `anyhow::Result` 统一转换为 `Result<T, ()>`，实现了错误处理的标准化。",
    "responsibilities": [
      "提供RSS订阅管理的核心CRUD接口",
      "协调前端请求与后端FeaturesAPI的交互",
      "实现网页内容抓取以支持AI摘要和问答",
      "集成并控制Ollama本地AI服务",
      "统一处理后端服务调用的错误"
    ],
    "interfaces": [
      {
        "name": "add_feeds_package",
        "interface_type": "command",
        "visibility": "pub(crate)",
        "parameters": [
          {
            "name": "state",
            "param_type": "State<'_, Arc<HybridRuntimeState>>",
            "is_optional": false,
            "description": null
          },
          {
            "name": "feeds_package",
            "param_type": "FeedsPackage",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Result<(), ()>",
        "description": "添加一个新的订阅包"
      },
      {
        "name": "remove_feeds_package",
        "interface_type": "command",
        "visibility": "pub(crate)",
        "parameters": [
          {
            "name": "state",
            "param_type": "State<'_, Arc<HybridRuntimeState>>",
            "is_optional": false,
            "description": null
          },
          {
            "name": "package_id",
            "param_type": "&str",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Result<(), ()>",
        "description": "根据ID移除一个订阅包"
      },
      {
        "name": "get_feeds_packages",
        "interface_type": "command",
        "visibility": "pub(crate)",
        "parameters": [
          {
            "name": "state",
            "param_type": "State<'_, Arc<HybridRuntimeState>>",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Result<Vec<FeedsPackage>, ()>",
        "description": "获取所有订阅包的列表"
      },
      {
        "name": "update_feed_contents",
        "interface_type": "command",
        "visibility": "pub(crate)",
        "parameters": [
          {
            "name": "app_handle",
            "param_type": "AppHandle<R>",
            "is_optional": false,
            "description": null
          },
          {
            "name": "state",
            "param_type": "State<'_, Arc<HybridRuntimeState>>",
            "is_optional": false,
            "description": null
          },
          {
            "name": "package_id",
            "param_type": "&str",
            "is_optional": false,
            "description": null
          },
          {
            "name": "feed_id",
            "param_type": "&str",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Result<(), ()>",
        "description": "更新指定订阅源的内容"
      },
      {
        "name": "scrap_text_by_url",
        "interface_type": "command",
        "visibility": "pub(crate)",
        "parameters": [
          {
            "name": "app_handle",
            "param_type": "AppHandle<R>",
            "is_optional": false,
            "description": null
          },
          {
            "name": "url",
            "param_type": "&str",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Result<String, ()>",
        "description": "通过创建隐藏WebView抓取指定URL的完整HTML文本"
      },
      {
        "name": "chat_with_article_assistant",
        "interface_type": "command",
        "visibility": "pub(crate)",
        "parameters": [
          {
            "name": "app_handle",
            "param_type": "AppHandle<R>",
            "is_optional": false,
            "description": null
          },
          {
            "name": "state",
            "param_type": "State<'_, Arc<HybridRuntimeState>>",
            "is_optional": false,
            "description": null
          },
          {
            "name": "article_id",
            "param_type": "i32",
            "is_optional": false,
            "description": null
          },
          {
            "name": "user_prompt",
            "param_type": "&str",
            "is_optional": false,
            "description": null
          },
          {
            "name": "history",
            "param_type": "Vec<ConversationMessage>",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Result<String, ()>",
        "description": "与指定文章的AI助手进行对话"
      }
    ],
    "dependencies": [
      {
        "name": "std::sync::Arc",
        "path": null,
        "is_external": false,
        "line_number": 1,
        "dependency_type": "std",
        "version": null
      },
      {
        "name": "spdlog::error",
        "path": null,
        "is_external": true,
        "line_number": 3,
        "dependency_type": "logging",
        "version": null
      },
      {
        "name": "tauri",
        "path": null,
        "is_external": true,
        "line_number": 4,
        "dependency_type": "framework",
        "version": null
      },
      {
        "name": "feed_api_rs::features::api::FeaturesAPI",
        "path": "crates/feed-api-rs/src/features/api.rs",
        "is_external": false,
        "line_number": 7,
        "dependency_type": "internal_service",
        "version": null
      },
      {
        "name": "ollama::ProgramStatus",
        "path": null,
        "is_external": true,
        "line_number": 8,
        "dependency_type": "ai_service",
        "version": null
      },
      {
        "name": "recorder::entity::article_record::Model",
        "path": null,
        "is_external": true,
        "line_number": 9,
        "dependency_type": "data_model",
        "version": null
      },
      {
        "name": "types::AppConfig",
        "path": "crates/types/src/lib.rs",
        "is_external": false,
        "line_number": 10,
        "dependency_type": "data_model",
        "version": null
      },
      {
        "name": "types::ConversationMessage",
        "path": "crates/types/src/lib.rs",
        "is_external": false,
        "line_number": 10,
        "dependency_type": "data_model",
        "version": null
      },
      {
        "name": "types::FeedTargetDescription",
        "path": "crates/types/src/lib.rs",
        "is_external": false,
        "line_number": 10,
        "dependency_type": "data_model",
        "version": null
      },
      {
        "name": "types::FeedsPackage",
        "path": "crates/types/src/lib.rs",
        "is_external": false,
        "line_number": 10,
        "dependency_type": "data_model",
        "version": null
      },
      {
        "name": "crate::scrap_host",
        "path": "./crates/tauri-plugin-feed-api/src/scrap_host.rs",
        "is_external": false,
        "line_number": 13,
        "dependency_type": "internal_module",
        "version": null
      },
      {
        "name": "crate::state::HybridRuntimeState",
        "path": "./crates/tauri-plugin-feed-api/src/state.rs",
        "is_external": false,
        "line_number": 14,
        "dependency_type": "internal_state",
        "version": null
      }
    ],
    "complexity_metrics": {
      "cyclomatic_complexity": 4.0,
      "lines_of_code": 299,
      "number_of_functions": 25,
      "number_of_classes": 0,
      "depth_of_inheritance": 0,
      "coupling_factor": 0.65,
      "cohesion_score": 0.82
    }
  },
  "timestamp": 1758805673,
  "prompt_hash": "a637c5b39416f4ebdd06177531cab86a",
  "token_usage": {
    "input_tokens": 3178,
    "output_tokens": 1857,
    "total_tokens": 5035
  },
  "model_name": null
}