{
  "data": {
    "code_dossier": {
      "name": "types.ts",
      "file_path": "app/src/lib/widgets/types.ts",
      "source_summary": "",
      "code_purpose": "widget",
      "importance_score": 0.6,
      "description": "定义前端UI组件所需的数据结构和类型，支持Markdown渲染、HTML内容展示及嵌入式WebView功能。",
      "functions": [],
      "interfaces": [
        "MarkdownProps",
        "ArticleRenderProps",
        "EmbedWebViewProps",
        "ArticleRenderType"
      ]
    },
    "detailed_description": "该文件是一个TypeScript类型定义文件，主要用于声明前端UI组件（特别是富文本和嵌入式内容展示）所需的接口与联合类型。其中，MarkdownProps用于传递Markdown内容字符串；ArticleRenderProps是其同名类型别名，表明可复用性设计；ArticleRenderType为字面量联合类型，用于区分内容渲染方式（markdown或html）；EmbedWebViewProps则定义了嵌入式WebView的属性，包括源地址和可选的加载生命周期回调函数。所有类型均通过export type导出，供其他组件安全引用。",
    "responsibilities": [
      "定义Markdown内容渲染所需的属性结构",
      "提供文章内容渲染类型的枚举支持（markdown/html）",
      "声明嵌入式WebView组件的输入参数及事件回调机制",
      "促进类型安全的跨组件通信",
      "减少重复类型声明，提升代码可维护性"
    ],
    "interfaces": [
      {
        "name": "MarkdownProps",
        "interface_type": "interface",
        "visibility": "exported",
        "parameters": [
          {
            "name": "value",
            "param_type": "string",
            "is_optional": false,
            "description": "要渲染的Markdown格式文本内容"
          }
        ],
        "return_type": null,
        "description": "描述包含Markdown字符串值的对象结构"
      },
      {
        "name": "ArticleRenderProps",
        "interface_type": "type",
        "visibility": "exported",
        "parameters": [],
        "return_type": "MarkdownProps",
        "description": "MarkdownProps的类型别名，用于语义化区分用途"
      },
      {
        "name": "ArticleRenderType",
        "interface_type": "type",
        "visibility": "exported",
        "parameters": [],
        "return_type": "'markdown' | 'html'",
        "description": "表示文章渲染方式的字面量联合类型"
      },
      {
        "name": "EmbedWebViewProps",
        "interface_type": "interface",
        "visibility": "exported",
        "parameters": [
          {
            "name": "src",
            "param_type": "string",
            "is_optional": false,
            "description": "嵌入网页的URL地址"
          },
          {
            "name": "onLoadStart",
            "param_type": "(src: string) => void",
            "is_optional": true,
            "description": "页面开始加载时触发的回调"
          },
          {
            "name": "onLoadEnd",
            "param_type": "(src: string) => void",
            "is_optional": true,
            "description": "页面加载完成时触发的回调"
          }
        ],
        "return_type": null,
        "description": "定义嵌入式WebView的行为配置属性"
      }
    ],
    "dependencies": [],
    "complexity_metrics": {
      "cyclomatic_complexity": 1.0,
      "lines_of_code": 14,
      "number_of_functions": 0,
      "number_of_classes": 0,
      "depth_of_inheritance": 0,
      "coupling_factor": 0.0,
      "cohesion_score": 0.95
    }
  },
  "timestamp": 1759024714,
  "prompt_hash": "5e9a3ba874f09a3229ccac54845fb3c8",
  "token_usage": {
    "input_tokens": 493,
    "output_tokens": 927,
    "total_tokens": 1420
  },
  "model_name": null
}