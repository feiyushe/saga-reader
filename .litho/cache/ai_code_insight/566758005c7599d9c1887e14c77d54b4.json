{
  "data": {
    "code_dossier": {
      "name": "feeds.svelte.ts",
      "file_path": "app/src/routes/main/stores/feeds.svelte.ts",
      "source_summary": "",
      "code_purpose": "controller",
      "importance_score": 1.0,
      "description": "管理用户订阅源（feeds）的聚合状态与操作，提供本地状态存储及远程API同步能力。",
      "functions": [
        "create",
        "refresh",
        "findPackagesOwnerByFeedId",
        "addFeedsPackage",
        "removeFeedsPackage",
        "renameFeedsPackage",
        "addFeed",
        "removeFeed",
        "renameFeed"
      ],
      "interfaces": [
        "StoreType",
        "FeedsPackage",
        "FeedTargetDescription",
        "LoadingStore",
        "Status"
      ]
    },
    "detailed_description": "该组件是一个Svelte状态管理模块，用于在前端维护用户订阅包（FeedsPackage）及其内部订阅项（Feed）的集合。它封装了对后端feeds服务的所有CRUD操作，并通过loading.svelte提供的加载状态机制统一处理异步请求的状态反馈（加载中、成功、失败）。组件暴露一个`create`工厂函数返回响应式store实例，包含当前feedPackages列表和多个操作方法。所有修改操作均通过`featuresApi`代理到后端实现，读取操作如`findPackagesOwnerByFeedId`则在本地内存中完成。支持自动刷新、增删改包/订阅等功能，是feeds功能域的核心协调者。",
    "responsibilities": [
      "提供响应式的feeds数据存储与访问",
      "协调本地状态与远程API的数据同步",
      "封装feeds相关的所有业务操作接口",
      "管理异步操作的加载状态与错误处理",
      "实现基于ID的feed归属查询逻辑"
    ],
    "interfaces": [
      {
        "name": "StoreType",
        "interface_type": "type",
        "visibility": "exported",
        "parameters": [],
        "return_type": null,
        "description": "定义feeds store的结构，包括状态字段和可调用方法"
      },
      {
        "name": "create",
        "interface_type": "function",
        "visibility": "exported",
        "parameters": [],
        "return_type": "StoreType",
        "description": "工厂函数，创建并返回一个新的feeds store实例"
      },
      {
        "name": "refresh",
        "interface_type": "method",
        "visibility": "internal",
        "parameters": [],
        "return_type": "Promise<void>",
        "description": "从后端重新拉取所有feeds packages并更新本地状态"
      },
      {
        "name": "addFeedsPackage",
        "interface_type": "method",
        "visibility": "internal",
        "parameters": [
          {
            "name": "feedsPackage",
            "param_type": "FeedsPackage",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Promise<void>",
        "description": "添加新的feeds package并通过API持久化"
      },
      {
        "name": "removeFeedsPackage",
        "interface_type": "method",
        "visibility": "internal",
        "parameters": [
          {
            "name": "packageId",
            "param_type": "string",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Promise<void>",
        "description": "根据ID删除指定的feeds package"
      },
      {
        "name": "renameFeedsPackage",
        "interface_type": "method",
        "visibility": "internal",
        "parameters": [
          {
            "name": "packageId",
            "param_type": "string",
            "is_optional": false,
            "description": null
          },
          {
            "name": "newName",
            "param_type": "string",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Promise<void>",
        "description": "重命名指定ID的feeds package"
      },
      {
        "name": "addFeed",
        "interface_type": "method",
        "visibility": "internal",
        "parameters": [
          {
            "name": "packageId",
            "param_type": "string",
            "is_optional": false,
            "description": null
          },
          {
            "name": "ftd",
            "param_type": "FeedTargetDescription",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Promise<void>",
        "description": "向指定package添加新的feed"
      },
      {
        "name": "removeFeed",
        "interface_type": "method",
        "visibility": "internal",
        "parameters": [
          {
            "name": "packageId",
            "param_type": "string",
            "is_optional": false,
            "description": null
          },
          {
            "name": "feedId",
            "param_type": "string",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Promise<void>",
        "description": "从指定package中移除feed"
      },
      {
        "name": "renameFeed",
        "interface_type": "method",
        "visibility": "internal",
        "parameters": [
          {
            "name": "packageId",
            "param_type": "string",
            "is_optional": false,
            "description": null
          },
          {
            "name": "feedId",
            "param_type": "string",
            "is_optional": false,
            "description": null
          },
          {
            "name": "newName",
            "param_type": "string",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Promise<void>",
        "description": "重命名指定feed"
      },
      {
        "name": "findPackagesOwnerByFeedId",
        "interface_type": "method",
        "visibility": "internal",
        "parameters": [
          {
            "name": "feedId",
            "param_type": "string",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "FeedsPackage | undefined",
        "description": "根据feed ID查找其所属的package"
      }
    ],
    "dependencies": [
      {
        "name": "featuresApi",
        "path": "$lib/hybrid-apis/feed/impl",
        "is_external": false,
        "line_number": 1,
        "dependency_type": "api-client",
        "version": null
      },
      {
        "name": "LoadingStore",
        "path": "./loading.svelte",
        "is_external": false,
        "line_number": 4,
        "dependency_type": "state-utils",
        "version": null
      }
    ],
    "complexity_metrics": {
      "cyclomatic_complexity": 1.0,
      "lines_of_code": 86,
      "number_of_functions": 9,
      "number_of_classes": 0,
      "depth_of_inheritance": 0,
      "coupling_factor": 0.25,
      "cohesion_score": 0.92
    }
  },
  "timestamp": 1759024183,
  "prompt_hash": "566758005c7599d9c1887e14c77d54b4",
  "token_usage": {
    "input_tokens": 1043,
    "output_tokens": 1447,
    "total_tokens": 2490
  },
  "model_name": null
}