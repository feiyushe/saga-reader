{
  "data": {
    "code_dossier": {
      "name": "commands.rs",
      "file_path": "crates/tauri-plugin-feed-api/src/commands.rs",
      "source_summary": "",
      "code_purpose": "controller",
      "importance_score": 0.8,
      "description": "Tauri命令处理模块，封装了所有前端可调用的异步API接口，用于管理订阅源包、文章内容读取、AI交互等功能。",
      "functions": [
        "add_feeds_package",
        "remove_feeds_package",
        "rename_feeds_package",
        "add_feed",
        "remove_feed",
        "rename_feed",
        "change_feed_data",
        "get_feeds_packages",
        "get_feeds_by_package",
        "update_feed_contents",
        "read_feed_contents",
        "query_by_id",
        "mark_as_read",
        "set_favorite",
        "get_app_config",
        "set_app_config",
        "get_ollama_status",
        "download_ollama",
        "launch_ollama",
        "open_article_external",
        "scrap_text_by_url",
        "update_article_by_source",
        "chat_with_article_assistant",
        "search_contents_by_keyword"
      ],
      "interfaces": []
    },
    "detailed_description": "该组件是Tauri插件的核心命令层，负责暴露Rust后端功能给前端JavaScript调用。每个函数通过`#[tauri::command]`宏导出为IPC接口，统一使用`Arc<HybridRuntimeState>`状态管理共享资源，并通过`features_api`代理实际业务逻辑。包含对Feeds包的增删改查、文章内容抓取与标记、Ollama模型控制、外部网页打开、AI对话等完整功能集。错误处理采用anyhow Result转换为标准Result<()>模式，日志通过spdlog记录。特别地，`scrap_text_by_url`依赖独立WebView窗口实现页面内容抓取，具有较强的系统集成能力。",
    "responsibilities": [
      "提供Tauri IPC命令接口供前端调用",
      "协调应用状态(HybridRuntimeState)与核心业务逻辑(FeaturesAPI)之间的交互",
      "处理订阅源(FeedsPackage)和文章(Article)的CRUD操作",
      "管理Ollama本地AI服务的生命周期（下载、启动、状态查询）",
      "实现网页内容抓取及基于LLM的文章智能交互功能"
    ],
    "interfaces": [
      {
        "name": "add_feeds_package",
        "interface_type": "command",
        "visibility": "private",
        "parameters": [
          {
            "name": "state",
            "param_type": "State<'_, Arc<HybridRuntimeState>>",
            "is_optional": false,
            "description": null
          },
          {
            "name": "feeds_package",
            "param_type": "FeedsPackage",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Result<(), ()>",
        "description": "添加新的订阅源包"
      },
      {
        "name": "remove_feeds_package",
        "interface_type": "command",
        "visibility": "private",
        "parameters": [
          {
            "name": "state",
            "param_type": "State<'_, Arc<HybridRuntimeState>>",
            "is_optional": false,
            "description": null
          },
          {
            "name": "package_id",
            "param_type": "&str",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Result<(), ()>",
        "description": "移除指定ID的订阅源包"
      },
      {
        "name": "get_feeds_packages",
        "interface_type": "command",
        "visibility": "private",
        "parameters": [
          {
            "name": "state",
            "param_type": "State<'_, Arc<HybridRuntimeState>>",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Result<Vec<FeedsPackage>, ()>",
        "description": "获取所有订阅源包列表"
      },
      {
        "name": "update_feed_contents",
        "interface_type": "command",
        "visibility": "private",
        "parameters": [
          {
            "name": "app_handle",
            "param_type": "AppHandle<R>",
            "is_optional": false,
            "description": null
          },
          {
            "name": "state",
            "param_type": "State<'_, Arc<HybridRuntimeState>>",
            "is_optional": false,
            "description": null
          },
          {
            "name": "package_id",
            "param_type": "&str",
            "is_optional": false,
            "description": null
          },
          {
            "name": "feed_id",
            "param_type": "&str",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Result<(), ()>",
        "description": "更新指定订阅源的内容"
      },
      {
        "name": "chat_with_article_assistant",
        "interface_type": "command",
        "visibility": "private",
        "parameters": [
          {
            "name": "app_handle",
            "param_type": "AppHandle<R>",
            "is_optional": false,
            "description": null
          },
          {
            "name": "state",
            "param_type": "State<'_, Arc<HybridRuntimeState>>",
            "is_optional": false,
            "description": null
          },
          {
            "name": "article_id",
            "param_type": "i32",
            "is_optional": false,
            "description": null
          },
          {
            "name": "user_prompt",
            "param_type": "&str",
            "is_optional": false,
            "description": null
          },
          {
            "name": "history",
            "param_type": "Vec<ConversationMessage>",
            "is_optional": false,
            "description": null
          }
        ],
        "return_type": "Result<String, ()>",
        "description": "与文章助手进行聊天对话"
      }
    ],
    "dependencies": [
      {
        "name": "std::sync::Arc",
        "path": null,
        "is_external": false,
        "line_number": null,
        "dependency_type": "std",
        "version": null
      },
      {
        "name": "spdlog",
        "path": "spdlog",
        "is_external": true,
        "line_number": null,
        "dependency_type": "logging",
        "version": null
      },
      {
        "name": "tauri",
        "path": "tauri",
        "is_external": true,
        "line_number": null,
        "dependency_type": "framework",
        "version": null
      },
      {
        "name": "feed_api_rs",
        "path": "feed_api_rs::features::api::FeaturesAPI",
        "is_external": true,
        "line_number": null,
        "dependency_type": "business_logic",
        "version": null
      },
      {
        "name": "ollama",
        "path": "ollama::ProgramStatus",
        "is_external": true,
        "line_number": null,
        "dependency_type": "ai_service",
        "version": null
      },
      {
        "name": "recorder",
        "path": "recorder::entity::article_record::Model",
        "is_external": true,
        "line_number": null,
        "dependency_type": "data_access",
        "version": null
      },
      {
        "name": "types",
        "path": "types::{AppConfig, ConversationMessage, FeedTargetDescription, FeedsPackage}",
        "is_external": true,
        "line_number": null,
        "dependency_type": "domain_model",
        "version": null
      },
      {
        "name": "crate::scrap_host",
        "path": "crate::scrap_host",
        "is_external": false,
        "line_number": null,
        "dependency_type": "local_module",
        "version": null
      },
      {
        "name": "crate::state::HybridRuntimeState",
        "path": "crate::state::HybridRuntimeState",
        "is_external": false,
        "line_number": null,
        "dependency_type": "local_state",
        "version": null
      }
    ],
    "complexity_metrics": {
      "cyclomatic_complexity": 4.0,
      "lines_of_code": 299,
      "number_of_functions": 24,
      "number_of_classes": 0,
      "depth_of_inheritance": 0,
      "coupling_factor": 9.0,
      "cohesion_score": 0.85
    }
  },
  "timestamp": 1759024417,
  "prompt_hash": "bf7caf80e892271f21f3392b5e723804",
  "token_usage": {
    "input_tokens": 3187,
    "output_tokens": 1610,
    "total_tokens": 4797
  },
  "model_name": null
}