{
  "data": {
    "code_dossier": {
      "name": "feeds.svelte.ts",
      "file_path": "app/src/routes/main/stores/feeds.svelte.ts",
      "code_purpose": "controller",
      "importance_score": 1.0,
      "description": "管理用户订阅源（feeds）的Svelte状态存储，提供增删改查及刷新功能。",
      "functions": [
        "create",
        "refresh",
        "findPackagesOwnerByFeedId",
        "addFeedsPackage",
        "removeFeedsPackage",
        "renameFeedsPackage",
        "addFeed",
        "removeFeed",
        "renameFeed"
      ],
      "interfaces": [
        "StoreType",
        "FeedsPackage",
        "FeedTargetDescription",
        "LoadingStore",
        "Status"
      ]
    },
    "detailed_description": "该组件是一个Svelte状态存储模块，用于管理用户的订阅包（FeedsPackage）及其内部的订阅项（Feed）。它封装了对后端API的调用，通过featuresApi实现数据的加载、创建、删除和重命名操作。组件使用$state()进行响应式状态管理，并结合loading.svelte中的加载状态机制，在数据请求过程中维护UI的状态反馈。核心功能包括：初始化加载状态、获取所有订阅包、查找特定feed所属的包、以及对包和feed的CRUD操作。返回的对象暴露了feedPackages的只读访问器，确保外部无法直接修改内部状态。",
    "responsibilities": [
      "管理用户订阅源的数据状态",
      "协调与后端API的通信",
      "维护加载状态以支持UI反馈",
      "提供安全的响应式数据访问接口",
      "实现订阅包和订阅项的增删改查逻辑"
    ],
    "interfaces": [
      {
        "name": "StoreType",
        "interface_type": "type",
        "visibility": "export",
        "parameters": [],
        "return_type": null,
        "description": "定义feeds store的结构，包含loadingStore、feedPackages和多个操作方法"
      },
      {
        "name": "FeedsPackage",
        "interface_type": "type",
        "visibility": "import",
        "parameters": [],
        "return_type": null,
        "description": "表示一组订阅源的集合类型"
      },
      {
        "name": "FeedTargetDescription",
        "interface_type": "type",
        "visibility": "import",
        "parameters": [],
        "return_type": null,
        "description": "描述单个订阅源目标的信息类型"
      },
      {
        "name": "LoadingStore",
        "interface_type": "type",
        "visibility": "import",
        "parameters": [],
        "return_type": null,
        "description": "来自loading.svelte的状态管理类型"
      },
      {
        "name": "Status",
        "interface_type": "enum",
        "visibility": "import",
        "parameters": [],
        "return_type": null,
        "description": "加载状态枚举值"
      },
      {
        "name": "create",
        "interface_type": "function",
        "visibility": "export",
        "parameters": [],
        "return_type": "StoreType",
        "description": "工厂函数，创建并返回一个新的feeds store实例"
      },
      {
        "name": "refresh",
        "interface_type": "method",
        "visibility": "public",
        "parameters": [],
        "return_type": "Promise<void>",
        "description": "从API重新获取所有订阅包数据并更新本地状态"
      },
      {
        "name": "findPackagesOwnerByFeedId",
        "interface_type": "method",
        "visibility": "public",
        "parameters": [
          {
            "name": "feedId",
            "param_type": "string",
            "is_optional": false,
            "description": "要查找的feed的唯一标识符"
          }
        ],
        "return_type": "FeedsPackage | undefined",
        "description": "根据feedId查找其所属的订阅包"
      },
      {
        "name": "addFeedsPackage",
        "interface_type": "method",
        "visibility": "public",
        "parameters": [
          {
            "name": "feedsPackage",
            "param_type": "FeedsPackage",
            "is_optional": false,
            "description": "要添加的订阅包对象"
          }
        ],
        "return_type": "Promise<void>",
        "description": "向后端添加新的订阅包"
      },
      {
        "name": "removeFeedsPackage",
        "interface_type": "method",
        "visibility": "public",
        "parameters": [
          {
            "name": "packageId",
            "param_type": "string",
            "is_optional": false,
            "description": "要删除的订阅包ID"
          }
        ],
        "return_type": "Promise<void>",
        "description": "从后端删除指定ID的订阅包"
      },
      {
        "name": "renameFeedsPackage",
        "interface_type": "method",
        "visibility": "public",
        "parameters": [
          {
            "name": "packageId",
            "param_type": "string",
            "is_optional": false,
            "description": "要重命名的订阅包ID"
          },
          {
            "name": "newName",
            "param_type": "string",
            "is_optional": false,
            "description": "新的包名称"
          }
        ],
        "return_type": "Promise<void>",
        "description": "重命名指定ID的订阅包"
      },
      {
        "name": "addFeed",
        "interface_type": "method",
        "visibility": "public",
        "parameters": [
          {
            "name": "packageId",
            "param_type": "string",
            "is_optional": false,
            "description": "目标订阅包ID"
          },
          {
            "name": "ftd",
            "param_type": "FeedTargetDescription",
            "is_optional": false,
            "description": "要添加的feed描述对象"
          }
        ],
        "return_type": "Promise<void>",
        "description": "向指定订阅包中添加新的feed"
      },
      {
        "name": "removeFeed",
        "interface_type": "method",
        "visibility": "public",
        "parameters": [
          {
            "name": "packageId",
            "param_type": "string",
            "is_optional": false,
            "description": "包含目标feed的订阅包ID"
          },
          {
            "name": "feedId",
            "param_type": "string",
            "is_optional": false,
            "description": "要删除的feed ID"
          }
        ],
        "return_type": "Promise<void>",
        "description": "从指定订阅包中删除指定feed"
      },
      {
        "name": "renameFeed",
        "interface_type": "method",
        "visibility": "public",
        "parameters": [
          {
            "name": "packageId",
            "param_type": "string",
            "is_optional": false,
            "description": "包含目标feed的订阅包ID"
          },
          {
            "name": "feedId",
            "param_type": "string",
            "is_optional": false,
            "description": "要重命名的feed ID"
          },
          {
            "name": "newName",
            "param_type": "string",
            "is_optional": false,
            "description": "新的feed名称"
          }
        ],
        "return_type": "Promise<void>",
        "description": "重命名指定订阅包中的指定feed"
      }
    ],
    "dependencies": [
      {
        "name": "featuresApi",
        "path": "$lib/hybrid-apis/feed/impl",
        "is_external": false,
        "line_number": 1,
        "dependency_type": "import",
        "version": null
      },
      {
        "name": "LoadingStore",
        "path": "./loading.svelte",
        "is_external": false,
        "line_number": 4,
        "dependency_type": "import",
        "version": null
      }
    ],
    "complexity_metrics": {
      "cyclomatic_complexity": 1.0,
      "lines_of_code": 86,
      "number_of_functions": 9,
      "number_of_classes": 0,
      "depth_of_inheritance": 0,
      "coupling_factor": 2.0,
      "cohesion_score": 0.85
    }
  },
  "timestamp": 1758801035,
  "prompt_hash": "3f28221975c41db1eee84e4d518e5805",
  "token_usage": {
    "input_tokens": 1035,
    "output_tokens": 1742,
    "total_tokens": 2777
  },
  "model_name": null
}