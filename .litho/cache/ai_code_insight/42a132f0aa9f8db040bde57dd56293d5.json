{
  "data": {
    "code_dossier": {
      "name": "llm_glm.rs",
      "file_path": "crates/llm/src/providers/llm_glm.rs",
      "source_summary": "",
      "code_purpose": "specificfeature",
      "importance_score": 0.8,
      "description": "实现基于GLM大语言模型的补全服务，通过适配OpenAI兼容接口完成请求。",
      "functions": [
        "new",
        "completion"
      ],
      "interfaces": [
        "CompletionService"
      ]
    },
    "detailed_description": "该组件实现了针对智谱AI GLM系列大模型的补全功能。它通过封装一个通用的OpenAI类接口（OpenAILikeCompletionService），将GLMProvider配置转换为OpenAILLMProvider格式，从而复用已有的OpenAI兼容逻辑进行HTTP通信。其主要作用是作为适配层，使系统能够以统一方式调用不同厂商但协议相似的大模型服务。",
    "responsibilities": [
      "将GLM模型提供商配置适配为OpenAI兼容格式",
      "构建并初始化GLM补全服务实例",
      "代理调用底层OpenAI-like服务完成文本补全",
      "处理GLM特有的初始化参数并传递至通用服务层",
      "确保与系统中其他LLM提供者的一致性接口"
    ],
    "interfaces": [
      {
        "name": "GLMCompletionService::new",
        "interface_type": "constructor",
        "visibility": "public",
        "parameters": [
          {
            "name": "config",
            "param_type": "&GLMLLMProvider",
            "is_optional": false,
            "description": "GLM模型配置信息"
          },
          {
            "name": "system_prompt",
            "param_type": "String",
            "is_optional": false,
            "description": "系统提示词"
          },
          {
            "name": "_options",
            "param_type": "AITargetOption",
            "is_optional": false,
            "description": "目标选项（当前未使用）"
          }
        ],
        "return_type": "anyhow::Result<GLMCompletionService>",
        "description": "创建新的GLM补全服务实例"
      },
      {
        "name": "CompletionService::completion",
        "interface_type": "trait_method",
        "visibility": "public",
        "parameters": [
          {
            "name": "content",
            "param_type": "String",
            "is_optional": false,
            "description": "用户输入内容"
          }
        ],
        "return_type": "anyhow::Result<String>",
        "description": "执行补全请求并返回结果"
      }
    ],
    "dependencies": [
      {
        "name": "types",
        "path": "types::{GLMLLMProvider, OpenAILLMProvider}",
        "is_external": false,
        "line_number": 1,
        "dependency_type": "use",
        "version": null
      },
      {
        "name": "connector",
        "path": "crate::connector",
        "is_external": false,
        "line_number": 3,
        "dependency_type": "use",
        "version": null
      },
      {
        "name": "llm_openaibase_like",
        "path": "crate::providers::llm_openaibase_like::OpenAILikeCompletionService",
        "is_external": false,
        "line_number": 4,
        "dependency_type": "use",
        "version": null
      },
      {
        "name": "types",
        "path": "crate::providers::types::{AITargetOption, CompletionService}",
        "is_external": false,
        "line_number": 5,
        "dependency_type": "use",
        "version": null
      }
    ],
    "complexity_metrics": {
      "cyclomatic_complexity": 2.0,
      "lines_of_code": 33,
      "number_of_functions": 2,
      "number_of_classes": 1,
      "depth_of_inheritance": 0,
      "coupling_factor": 0.57,
      "cohesion_score": 0.92
    }
  },
  "timestamp": 1759024259,
  "prompt_hash": "42a132f0aa9f8db040bde57dd56293d5",
  "token_usage": {
    "input_tokens": 769,
    "output_tokens": 853,
    "total_tokens": 1622
  },
  "model_name": null
}