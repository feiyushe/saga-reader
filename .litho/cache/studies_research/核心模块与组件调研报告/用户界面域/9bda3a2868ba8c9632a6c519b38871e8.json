{
  "data": {
    "domain_name": "用户界面域",
    "module_name": "主界面布局",
    "module_description": "实现应用的三栏式主布局结构，整合文章列表、阅读器和AI助手面板等核心组件。采用Flexbox实现响应式设计，通过Svelte stores进行全局状态管理，并支持条件渲染控制与多模块集成。",
    "interaction": "定义了统一的props接口供子组件使用，包括store状态对象和回调函数；通过createStore初始化主状态并注入到FeedsList、ArticlesList、ArticleReader等子组件；利用Svelte的$state和$effect实现响应式数据流与生命周期控制。",
    "implementation": "基于Svelte框架构建，使用Flexbox布局模型实现三栏式响应式UI（左侧订阅列表、中间文章列表、右侧阅读器/AI助手）。通过Svelte Stores进行跨组件状态共享，结合条件渲染展示ArticleReader或空白占位符。集成AI精灵面板和全局通知系统，确保用户交互流畅性与信息反馈及时性。",
    "associated_files": [
      "app/src/routes/main/+page.svelte",
      "app/src/routes/main/widgets/FeedsList.svelte",
      "app/src/routes/main/widgets/ArticlesList.svelte",
      "app/src/routes/main/widgets/ArticleReader.svelte",
      "app/src/routes/main/widgets/AISpritePanel.svelte"
    ],
    "flowchart_mermaid": "graph TD\n    A[主页面 +page.svelte] --> B[FeedsList 订阅列表]\n    A --> C[ArticlesList 文章列表]\n    A --> D[ArticleReader 阅读器]\n    A --> E[AISpritePanel AI助手]\n    F[Svelte Store] --> A\n    F --> B\n    F --> C\n    F --> D\n    F --> E\n    style A fill:#4CAF50, color:white\n    style F fill:#2196F3, color:white",
    "sequence_diagram_mermaid": "sequenceDiagram\n    participant Page as 主页面\n    participant Store as 全局Store\n    participant Feeds as FeedsList\n    participant Articles as ArticlesList\n    participant Reader as ArticleReader\n    \n    Page->>Store: createStore()\n    Page->>Feeds: 传递store与回调\n    Page->>Articles: 传递store与onArticlePressed\n    Page->>Reader: 传递articleId\n    Articles->>Store: $subscribe 获取文章数据\n    Articles->>Page: onArticlePressed(article)\n    Page->>Reader: 更新articleId\n    Reader->>Store: 请求文章内容\n    Store-->>Reader: 返回优化/熔炼/原始内容\n    \n    style Page fill:#4CAF50\n    style Store fill:#2196F3"
  },
  "timestamp": 1758807726,
  "prompt_hash": "9bda3a2868ba8c9632a6c519b38871e8",
  "token_usage": {
    "input_tokens": 2513,
    "output_tokens": 782,
    "total_tokens": 3295
  },
  "model_name": null
}