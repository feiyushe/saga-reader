{
  "data": {
    "domain_modules": [
      {
        "name": "用户界面域",
        "description": "负责提供直观、响应式的用户交互界面，支持多语言和主题切换，实现信息的可视化展示与用户操作反馈。",
        "domain_type": "核心业务域",
        "sub_modules": [
          {
            "name": "主界面布局",
            "description": "实现应用的三栏式主布局结构，整合文章列表、阅读器和AI助手面板等核心组件。",
            "code_paths": [
              "app/src/routes/main/+page.svelte"
            ],
            "key_functions": [
              "响应式布局管理",
              "条件渲染控制",
              "全局状态注入"
            ],
            "importance": 9.5
          },
          {
            "name": "文章交互组件",
            "description": "提供文章列表浏览、详情阅读、收藏标记等核心阅读功能的UI实现。",
            "code_paths": [
              "app/src/routes/main/widgets/ArticlesList.svelte",
              "app/src/routes/main/widgets/ArticleReader.svelte"
            ],
            "key_functions": [
              "文章列表渲染",
              "滚动加载更多",
              "阅读状态更新",
              "内容模式切换"
            ],
            "importance": 9.0
          },
          {
            "name": "AI助手集成",
            "description": "实现与AI助手的对话交互界面，支持消息历史展示、实时回复和Markdown渲染。",
            "code_paths": [
              "app/src/routes/main/widgets/AISpritePanel.svelte",
              "app/src/lib/widgets/Markdown.svelte"
            ],
            "key_functions": [
              "对话窗口管理",
              "消息流式显示",
              "AI回复渲染"
            ],
            "importance": 8.5
          },
          {
            "name": "订阅管理界面",
            "description": "提供订阅源的增删改查操作界面，支持分组管理和快捷导航。",
            "code_paths": [
              "app/src/routes/main/widgets/FeedsList.svelte",
              "app/src/routes/feedsPackage/create_or_edit/+page.svelte"
            ],
            "key_functions": [
              "订阅树形展示",
              "上下文菜单操作",
              "虚拟Feed导航"
            ],
            "importance": 8.0
          }
        ],
        "code_paths": [
          "app/src/routes/main",
          "app/src/lib/widgets"
        ],
        "importance": 9.0,
        "complexity": 7.5
      },
      {
        "name": "状态管理域",
        "description": "集中管理应用的全局状态和数据流，确保各组件间的状态同步与一致性，支持响应式编程模型。",
        "domain_type": "核心业务域",
        "sub_modules": [
          {
            "name": "全局状态容器",
            "description": "作为应用的核心状态枢纽，整合多个子store并提供统一访问接口。",
            "code_paths": [
              "app/src/routes/main/stores/index.svelte.ts"
            ],
            "key_functions": [
              "状态聚合",
              "依赖注入",
              "自动初始化"
            ],
            "importance": 9.5
          },
          {
            "name": "异步任务追踪",
            "description": "管理系统中所有异步操作的生命周期状态，为UI提供加载反馈。",
            "code_paths": [
              "app/src/routes/main/stores/tasks.svelte.ts"
            ],
            "key_functions": [
              "任务注册",
              "并发控制",
              "状态派生"
            ],
            "importance": 8.5
          },
          {
            "name": "文章状态管理",
            "description": "专门管理文章列表的数据获取、分页加载和搜索过滤逻辑。",
            "code_paths": [
              "app/src/routes/main/stores/articles/list/index.svelte.ts",
              "app/src/routes/main/stores/articles/search/index.svelte.ts"
            ],
            "key_functions": [
              "数据分页",
              "搜索过滤",
              "下拉刷新"
            ],
            "importance": 8.0
          }
        ],
        "code_paths": [
          "app/src/routes/main/stores"
        ],
        "importance": 9.0,
        "complexity": 8.0
      },
      {
        "name": "内容处理域",
        "description": "负责从多种来源获取网络内容，并利用大语言模型进行智能化处理，包括清洗、优化和融合。",
        "domain_type": "核心业务域",
        "sub_modules": [
          {
            "name": "内容抓取引擎",
            "description": "实现从RSS源和搜索引擎获取原始网页内容的能力。",
            "code_paths": [
              "crates/scrap/src/rss/mod.rs",
              "crates/scrap/src/search/bing.rs",
              "crates/scrap/src/article_reader.rs"
            ],
            "key_functions": [
              "RSS解析",
              "搜索引擎爬取",
              "HTML内容提取"
            ],
            "importance": 9.0
          },
          {
            "name": "LLM内容处理器",
            "description": "利用大语言模型对文章内容进行净化、优化和熔炼等智能处理。",
            "code_paths": [
              "crates/intelligent/src/article_processor/purge.rs",
              "crates/intelligent/src/article_processor/optimizer.rs",
              "crates/intelligent/src/article_processor/melt.rs"
            ],
            "key_functions": [
              "内容净化",
              "语义优化",
              "信息融合"
            ],
            "importance": 9.5
          },
          {
            "name": "智能代理服务",
            "description": "作为连接外部LLM服务的适配层，统一不同提供商的API差异。",
            "code_paths": [
              "crates/llm/src/llm_agent.rs",
              "crates/llm/src/providers/llm_openaibase_like.rs"
            ],
            "key_functions": [
              "请求适配",
              "协议转换",
              "服务路由"
            ],
            "importance": 8.5
          }
        ],
        "code_paths": [
          "crates/scrap",
          "crates/intelligent",
          "crates/llm"
        ],
        "importance": 9.5,
        "complexity": 9.0
      },
      {
        "name": "数据存储域",
        "description": "负责应用程序的数据持久化，管理本地数据库的读写操作，确保数据的一致性和可靠性。",
        "domain_type": "基础设施域",
        "sub_modules": [
          {
            "name": "数据库访问层",
            "description": "封装对SQLite数据库的CRUD操作，提供类型安全的数据访问接口。",
            "code_paths": [
              "crates/recorder/src/operator.rs",
              "crates/recorder/src/entity/article_record.rs"
            ],
            "key_functions": [
              "实体映射",
              "查询构建",
              "连接池管理"
            ],
            "importance": 8.5
          },
          {
            "name": "文章记录服务",
            "description": "提供文章数据的完整业务逻辑封装，包括状态管理和全文搜索。",
            "code_paths": [
              "crates/recorder/src/article_recorder_service.rs"
            ],
            "key_functions": [
              "生命周期管理",
              "多维度查询",
              "全文检索"
            ],
            "importance": 8.0
          }
        ],
        "code_paths": [
          "crates/recorder"
        ],
        "importance": 8.0,
        "complexity": 7.0
      },
      {
        "name": "系统集成域",
        "description": "处理应用与操作系统及其他外部系统的集成，包括配置管理、守护进程和Tauri桥接。",
        "domain_type": "工具支撑域",
        "sub_modules": [
          {
            "name": "启动初始化",
            "description": "协调应用启动时的各项初始化任务，包括配置加载和服务准备。",
            "code_paths": [
              "crates/feed_api_rs/src/startup/mod.rs",
              "crates/feed_api_rs/src/startup/init_app_config.rs"
            ],
            "key_functions": [
              "配置初始化",
              "日志系统设置",
              "LLM服务检测"
            ],
            "importance": 8.5
          },
          {
            "name": "Tauri插件桥接",
            "description": "实现前端JavaScript与后端Rust代码之间的通信桥梁。",
            "code_paths": [
              "crates/tauri-plugin-feed-api/src/lib.rs",
              "crates/tauri-plugin-feed-api/src/commands.rs"
            ],
            "key_functions": [
              "命令暴露",
              "状态共享",
              "原生调用"
            ],
            "importance": 8.0
          },
          {
            "name": "后台任务调度",
            "description": "管理定时更新任务和守护进程，确保内容的定期同步。",
            "code_paths": [
              "app/src-tauri/src/daemon/feeds_update.rs",
              "app/src-tauri/src/daemon/launcher.rs"
            ],
            "key_functions": [
              "定时触发",
              "实例互斥",
              "日志监控"
            ],
            "importance": 7.5
          }
        ],
        "code_paths": [
          "crates/feed_api_rs/src/startup",
          "crates/tauri-plugin-feed-api",
          "app/src-tauri/src/daemon"
        ],
        "importance": 8.0,
        "complexity": 8.5
      }
    ],
    "domain_relations": [
      {
        "from_domain": "用户界面域",
        "to_domain": "状态管理域",
        "relation_type": "状态依赖",
        "strength": 9.5,
        "description": "UI组件通过Svelte stores从状态管理域获取数据和状态，实现响应式更新。"
      },
      {
        "from_domain": "用户界面域",
        "to_domain": "系统集成域",
        "relation_type": "功能调用",
        "strength": 8.5,
        "description": "前端通过Tauri插件调用后端Rust命令，执行如内容抓取、配置更新等操作。"
      },
      {
        "from_domain": "状态管理域",
        "to_domain": "内容处理域",
        "relation_type": "服务调用",
        "strength": 8.0,
        "description": "状态管理模块调用FeaturesAPI接口触发内容更新、文章读取等业务操作。"
      },
      {
        "from_domain": "内容处理域",
        "to_domain": "数据存储域",
        "relation_type": "数据依赖",
        "strength": 9.0,
        "description": "内容处理结果需要持久化到本地数据库，由文章记录服务完成存储操作。"
      },
      {
        "from_domain": "内容处理域",
        "to_domain": "系统集成域",
        "relation_type": "配置依赖",
        "strength": 7.5,
        "description": "LLM处理器需要读取应用配置中的模型参数和API密钥等信息。"
      },
      {
        "from_domain": "系统集成域",
        "to_domain": "内容处理域",
        "relation_type": "服务编排",
        "strength": 8.5,
        "description": "启动初始化流程会触发内容抓取引擎和LLM服务的准备工作。"
      }
    ],
    "business_flows": [
      {
        "name": "项目分析流程",
        "description": "用户打开应用后，系统自动加载订阅源并展示最新文章列表的完整流程。",
        "steps": [
          {
            "step": 1,
            "domain_module": "系统集成域",
            "sub_module": "启动初始化",
            "operation": "加载应用配置和用户配置文件",
            "code_entry_point": "crates/feed_api_rs/src/startup/init_app_config.rs"
          },
          {
            "step": 2,
            "domain_module": "系统集成域",
            "sub_module": "启动初始化",
            "operation": "初始化日志系统并检查LLM服务状态",
            "code_entry_point": "crates/feed_api_rs/src/startup/init_logger.rs"
          },
          {
            "step": 3,
            "domain_module": "状态管理域",
            "sub_module": "全局状态容器",
            "operation": "创建全局状态实例并注入子stores",
            "code_entry_point": "app/src/routes/main/stores/index.svelte.ts"
          },
          {
            "step": 4,
            "domain_module": "内容处理域",
            "sub_module": "内容抓取引擎",
            "operation": "调用RSS和搜索引擎API获取最新文章",
            "code_entry_point": "crates/scrap/src/rss/mod.rs"
          },
          {
            "step": 5,
            "domain_module": "内容处理域",
            "sub_module": "LLM内容处理器",
            "operation": "对获取的文章内容进行净化、优化和熔炼处理",
            "code_entry_point": "crates/intelligent/src/article_processor/optimizer.rs"
          },
          {
            "step": 6,
            "domain_module": "数据存储域",
            "sub_module": "文章记录服务",
            "operation": "将处理后的文章保存到本地数据库",
            "code_entry_point": "crates/recorder/src/article_recorder_service.rs"
          },
          {
            "step": 7,
            "domain_module": "状态管理域",
            "sub_module": "文章状态管理",
            "operation": "从数据库加载文章列表并更新UI状态",
            "code_entry_point": "app/src/routes/main/stores/articles/list/index.svelte.ts"
          },
          {
            "step": 8,
            "domain_module": "用户界面域",
            "sub_module": "文章交互组件",
            "operation": "渲染文章列表，用户可浏览和选择文章阅读",
            "code_entry_point": "app/src/routes/main/widgets/ArticlesList.svelte"
          }
        ],
        "entry_point": "用户启动应用",
        "importance": 9.5,
        "involved_domains_count": 5
      },
      {
        "name": "代码洞察生成流程",
        "description": "当用户与AI助手对话时，系统生成基于文章内容的智能回复的完整流程。",
        "steps": [
          {
            "step": 1,
            "domain_module": "用户界面域",
            "sub_module": "AI助手集成",
            "operation": "捕获用户输入并发送聊天请求",
            "code_entry_point": "app/src/routes/main/stores/sprite.svelte.ts"
          },
          {
            "step": 2,
            "domain_module": "系统集成域",
            "sub_module": "Tauri插件桥接",
            "operation": "通过Tauri命令将请求转发至Rust后端",
            "code_entry_point": "crates/tauri-plugin-feed-api/src/commands.rs"
          },
          {
            "step": 3,
            "domain_module": "内容处理域",
            "sub_module": "智能代理服务",
            "operation": "构造包含文章内容和用户问题的完整提示词",
            "code_entry_point": "crates/intelligent/src/article_processor/assistant.rs"
          },
          {
            "step": 4,
            "domain_module": "内容处理域",
            "sub_module": "智能代理服务",
            "operation": "调用配置的LLM服务（Ollama/Mistral/GLM等）生成回复",
            "code_entry_point": "crates/llm/src/llm_agent.rs"
          },
          {
            "step": 5,
            "domain_module": "系统集成域",
            "sub_module": "Tauri插件桥接",
            "operation": "将生成的回复通过事件机制返回前端",
            "code_entry_point": "crates/tauri-plugin-feed-api/src/lib.rs"
          },
          {
            "step": 6,
            "domain_module": "用户界面域",
            "sub_module": "AI助手集成",
            "operation": "在对话面板中流式显示AI生成的回复",
            "code_entry_point": "app/src/routes/main/widgets/AISpritePanel.svelte"
          }
        ],
        "entry_point": "用户在AI精灵面板输入问题",
        "importance": 9.0,
        "involved_domains_count": 4
      }
    ],
    "architecture_summary": "采用前后端分离的桌面应用架构，前端使用Svelte框架实现响应式UI，后端采用Rust编写高性能业务逻辑。通过Tauri框架实现JS-Rust桥接，利用SeaORM进行数据库操作，并集成多种LLM服务提供商实现内容智能化处理。系统遵循清晰的分层架构，包含UI层、状态管理层、业务逻辑层、数据访问层和基础设施层。",
    "confidence_score": 0.95
  },
  "timestamp": 1758807559,
  "prompt_hash": "65390a58cc330d06fba7bd2cdb86164c",
  "token_usage": {
    "input_tokens": 28308,
    "output_tokens": 4101,
    "total_tokens": 32409
  },
  "model_name": null
}